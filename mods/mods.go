package mods

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
	"strconv"
	"time"

	"github.com/spf13/viper"
)

// –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
type TelegramResponse struct {
	Result []Update `json:"result"`
}

type Update struct {
	UpdateId int     `json:"update_id"`
	Message  Message `json:"message"`
}

type Message struct {
	Chat Chat   `json:"chat"`
	Text string `json:"text"`
}

type Chat struct {
	ChatId int `json:"id"`
}

type SendMessage struct {
	ChatId int    `json:"chat_id"`
	Text   string `json:"text"`
}

// –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Openweather API
type WeatherAPIResponse struct {
	Current Current `json:"current"`
	Daily   []Day   `json:"daily"`
	Hourly  []Hour  `json:"hourly"`
}

type Current struct {
	Sunrise    int           `json:"sunrise"`
	Sunset     int           `json:"sunset"`
	Temp       float32       `json:"temp"`
	Feels_like float32       `json:"feels_like"`
	Humidity   int           `json:"humidity"`
	Wind_speed float32       `json:"wind_speed"`
	Weather    []WeatherInfo `json:"weather"`
}

type Day struct {
	Dt         int64         `json:"dt"`
	Sunrise    int           `json:"sunrise"`
	Sunset     int           `json:"sunset"`
	Temp       Temp          `json:"temp"`
	Feels_like Temp          `json:"feels_like"`
	Wind_speed float32       `json:"wind_speed"`
	Weather    []WeatherInfo `json:"weather"`
	Humidity   int           `json:"humidity"`
}

type Hour struct {
	Dt         int64         `json:"dt"`
	Temp       float32       `json:"temp"`
	Feels_like float32       `json:"feels_like"`
	Humidity   int           `json:"humidity"`
	Wind_speed float32       `json:"wind_speed"`
	Weather    []WeatherInfo `json:"weather"`
}

type Temp struct {
	Day     float32 `json:"day"`
	Night   float32 `json:"night"`
	Evening float32 `json:"eve"`
	Morning float32 `json:"morn"`
}

type WeatherInfo struct {
	Description string `json:"description"`
}

// –°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Open-Meteo API

type openMeteoResponse struct {
	Error  bool            `json:"error"`
	Hourly openMeteoHourly `json:"hourly"`
}

type openMeteoHourly struct {
	Temperature []float32 `json:"temperature_2m"`
	Humidity    []int     `json:"relativehumidity_2m"`
	Feels_like  []float32 `json:"apparent_temperature"`
	Wind_speed  []float32 `json:"windspeed_10m"`
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
func SendMsg(botUrl string, update Update, msg string) error {

	// –ó–∞–ø–∏—Å—å —Ç–æ–≥–æ, —á—Ç–æ –∏ –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
	botMessage := SendMessage{
		ChatId: update.Message.Chat.ChatId,
		Text:   msg,
	}

	// –ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ json
	buf, err := json.Marshal(botMessage)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("Marshal json error: ", err)
		return err
	}

	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
	_, err = http.Post(botUrl+"/sendMessage", "application/json", bytes.NewBuffer(buf))

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("SendMessage method error: ", err)
		return err
	}

	return nil
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å—Å–≤–µ—Ç–µ –∏ –∑–∞–∫–∞—Ç–µ
func Sun(botUrl string, update Update) error {

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ json'a
	lat, lon := getCoordinates(update)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if lat == "err" {
		SendMsg(botUrl, update, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /set")
		return errors.New("wrong coordinates")
	}

	// –°—Å—ã–ª–∫–∞ –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã
	url := "https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&lang=ru&exclude=minutely,hourly,daily,alerts&units=metric&appid=" + viper.GetString("weatherToken")
	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
	req, _ := http.NewRequest("GET", url, nil)
	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	res, err := http.DefaultClient.Do(req)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("weather API error")
		SendMsg(botUrl, update, "weather API error")
		return err
	}
	defer res.Body.Close()

	// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
	body, _ := ioutil.ReadAll(res.Body)
	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞
	var rs = new(WeatherAPIResponse)
	// –ó–∞–ø–∏—Å—å –æ—Ç–≤–µ—Ç–∞
	json.Unmarshal(body, &rs)

	// –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	SendMsg(botUrl, update, "üåÑ –í–æ—Å—Ö–æ–¥ –∏ –∑–∞–∫–∞—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üåÑ\n \n"+
		"üåÖ –í–æ—Å—Ö–æ–¥ –Ω–∞—Å—Ç—É–ø–∏—Ç –≤ "+time.Unix(int64(rs.Current.Sunrise), 0).Add(3*time.Hour).Format("15:04:05")+
		"\nüåá –ê –∑–∞–∫–∞—Ç –≤ "+time.Unix(int64(rs.Current.Sunset), 0).Add(3*time.Hour).Format("15:04:05"))

	return nil
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á–∞—Å–æ–≤—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
func SendHourlyWeather(botUrl string, update Update, hours int) error {

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ json'a
	lat, lon := getCoordinates(update)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if lat == "err" {
		SendMsg(botUrl, update, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /set")
		return errors.New("wrong coordinates")
	}

	// –†–µ–∫–≤–µ—Å—Ç –∫ openweathermap

	// –°—Å—ã–ª–∫–∞ –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã
	url := "https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&lang=ru&exclude=minutely,hourly,daily,alerts&units=metric&appid=" + viper.GetString("weatherToken")
	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
	req, _ := http.NewRequest("GET", url, nil)
	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	res, err := http.DefaultClient.Do(req)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("weather API error")
		SendMsg(botUrl, update, "weather API error")
		return err
	}
	defer res.Body.Close()

	// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
	body, _ := ioutil.ReadAll(res.Body)
	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞
	var rs1 = new(WeatherAPIResponse)
	// –ó–∞–ø–∏—Å—å –æ—Ç–≤–µ—Ç–∞
	json.Unmarshal(body, &rs1)

	// –†–µ–∫–≤–µ—Å—Ç –∫ open-meteo

	// –°—Å—ã–ª–∫–∞ –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã
	url = "https://api.open-meteo.com/v1/forecast?latitude=" + lat + "&longitude=" + lon + "&hourly=temperature_2m,relativehumidity_2m,apparent_temperature,windspeed_10m&windspeed_unit=ms"
	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
	req, _ = http.NewRequest("GET", url, nil)
	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	res, err = http.DefaultClient.Do(req)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("weather API error")
		SendMsg(botUrl, update, "weather API error")
		return err
	}
	defer res.Body.Close()

	// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
	body, _ = ioutil.ReadAll(res.Body)
	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞
	var rs2 = new(openMeteoResponse)
	// –ó–∞–ø–∏—Å—å –æ—Ç–≤–µ—Ç–∞
	json.Unmarshal(body, &rs2)

	// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ –≤—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
	for n := 1; n < hours+1; n++ {
		SendMsg(botUrl, update, "–ü–æ–≥–æ–¥–∞ –Ω–∞ "+time.Unix(rs1.Hourly[n].Dt, 0).Format("15:04")+":\n \n"+
			"–ù–∞ —É–ª–∏—Ü–µ "+rs1.Hourly[n].Weather[0].Description+
			"\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "+strconv.Itoa(int((rs1.Hourly[n].Temp+rs2.Hourly.Temperature[n])/2))+"¬∞"+
			"\nü§î–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: "+strconv.Itoa(int((rs1.Hourly[n].Feels_like+rs2.Hourly.Feels_like[n])/2))+"¬∞"+
			"\nüí®–í–µ—Ç–µ—Ä: "+strconv.Itoa(int((rs1.Hourly[n].Wind_speed+rs2.Hourly.Wind_speed[n])/2))+" –º/—Å"+
			"\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: "+strconv.Itoa((rs1.Hourly[n].Humidity+rs2.Hourly.Humidity[n])/2)+"%")
	}

	return nil
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
func SendDailyWeather(botUrl string, update Update, days int) error {

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ json'a
	lat, lon := getCoordinates(update)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if lat == "err" {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		SendMsg(botUrl, update, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /set")
		return errors.New("wrong coordinates")
	}

	// –°—Å—ã–ª–∫–∞ –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã
	url := "https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&lang=ru&exclude=minutely,current,minutely,alerts&units=metric&appid=" + viper.GetString("weatherToken")
	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
	req, _ := http.NewRequest("GET", url, nil)
	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	res, err := http.DefaultClient.Do(req)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("weather API error")
		SendMsg(botUrl, update, "weather API error")
		return err
	}
	defer res.Body.Close()

	// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
	body, _ := ioutil.ReadAll(res.Body)
	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞
	var rs = new(WeatherAPIResponse)
	// –ó–∞–ø–∏—Å—å –æ—Ç–≤–µ—Ç–∞
	json.Unmarshal(body, &rs)

	// –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
	for n := 1; n < days+1; n++ {
		SendMsg(botUrl, update, "–ü–æ–≥–æ–¥–∞ –Ω–∞ "+time.Unix(rs.Daily[n].Dt, 0).Format("02/01/2006")+":\n \n"+
			"–ù–∞ —É–ª–∏—Ü–µ "+rs.Daily[n].Weather[0].Description+
			"\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "+strconv.Itoa(int(rs.Daily[n].Temp.Morning))+"¬∞"+" -> "+strconv.Itoa(int(rs.Daily[n].Temp.Evening))+"¬∞"+
			"\nü§î–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: "+strconv.Itoa(int(rs.Daily[n].Feels_like.Morning))+"¬∞"+" -> "+strconv.Itoa(int(rs.Daily[n].Feels_like.Evening))+"¬∞"+
			"\nüí®–í–µ—Ç–µ—Ä: "+strconv.Itoa(int(rs.Daily[n].Wind_speed))+" –º/—Å"+
			"\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: "+strconv.Itoa(rs.Daily[n].Humidity)+"%")
	}

	return nil
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –∏ –Ω–∞ –¥–≤–∞ –¥–Ω—è –≤–ø–µ—Ä—ë–¥
func SendThreeDaysWeather(botUrl string, update Update) {

	// –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ switch –¥–≤–µ –∫–æ–º–∞–Ω–¥—ã,
	// —Ç–æ –ø—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±—É–¥—É—Ç –≤—ã–≤–æ–¥–∏—Ç—å—Å—è –¥–≤–µ –æ—à–∏–±–∫–∏
	// –ü–æ—ç—Ç–æ–º—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è

	// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞
	if SendCurrentWeather(botUrl, update) == nil {

		// –ï—Å–ª–∏ –≤—Å—ë —Ö–æ—Ä–æ—à–æ, –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–≤—É—Ö –¥–Ω–µ–≤–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
		SendDailyWeather(botUrl, update, 2)
	}
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
func SendCurrentWeather(botUrl string, update Update) error {

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏–∑ json'a
	lat, lon := getCoordinates(update)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if lat == "err" {
		SendMsg(botUrl, update, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±–Ω–æ–≤–∏—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π /set")
		return errors.New("wrong coordinates")
	}

	// –°—Å—ã–ª–∫–∞ –∫ –∞–ø–∏ –ø–æ–≥–æ–¥—ã
	url := "https://api.openweathermap.org/data/2.5/onecall?lat=" + lat + "&lon=" + lon + "&lang=ru&exclude=minutely,hourly,daily,alerts&units=metric&appid=" + viper.GetString("weatherToken")
	// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞
	req, _ := http.NewRequest("GET", url, nil)
	// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
	res, err := http.DefaultClient.Do(req)

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("weather API error")
		SendMsg(botUrl, update, "weather API error")
		return err
	}
	defer res.Body.Close()

	// –ß—Ç–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
	body, _ := ioutil.ReadAll(res.Body)
	// –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç–≤–µ—Ç–∞
	var rs = new(WeatherAPIResponse)
	// –ó–∞–ø–∏—Å—å –æ—Ç–≤–µ—Ç–∞
	json.Unmarshal(body, &rs)

	// –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
	SendMsg(botUrl, update, "–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"+":\n \n"+
		"–ù–∞ —É–ª–∏—Ü–µ "+rs.Current.Weather[0].Description+
		"\nüå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: "+strconv.Itoa(int(rs.Current.Temp))+
		"\nü§î–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: "+strconv.Itoa(int(rs.Current.Feels_like))+"¬∞"+
		"\nüí®–í–µ—Ç–µ—Ä: "+strconv.Itoa(int(rs.Current.Wind_speed))+" –º/—Å"+
		"\nüíß–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞: "+strconv.Itoa(rs.Current.Humidity)+"%")

	return nil
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥
func Help(botUrl string, update Update) {
	SendMsg(botUrl, update, "–ö–æ–º–∞–Ω–¥—ã: \n"+
		"/set - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã\n"+
		"/weather - –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –¥–≤–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–Ω—è\n"+
		"/current - –ø–æ–≥–æ–¥–∞ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å\n"+
		"/hourly - –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 6 —á–∞—Å–æ–≤\n"+
		"/hourly24 - –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 24 —á–∞—Å–∞\n"+
		"/week - –ø–æ–≥–æ–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ 7 –¥–Ω–µ–π\n"+
		"/sun - –≤—Ä–µ–º—è –≤–æ—Å—Ö–æ–¥–∞ –∏ –∑–∞–∫–∞—Ç–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
}

// –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
func SetPlace(botUrl string, update Update) {

	// –û—Ç–∫—Ä—ã—Ç–∏–µ json —Ñ–∞–π–ª–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	file, err := os.Open("weather/coordinates.json")

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("Unable to create file:", err)
		os.Exit(1)
	}
	defer file.Close()

	// Map, –≤ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –∑–∞–ø–∏—Å—å –≤—Å–µ—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	var m map[string]string
	// –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ñ–∞–π–ª–∞
	body, _ := ioutil.ReadAll(file)
	// –ó–∞–ø–∏—Å—å –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
	json.Unmarshal(body, &m)

	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ map
	m[strconv.Itoa(update.Message.Chat.ChatId)] = update.Message.Text[5:]

	// –ó–∞–ø–∏—Å—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ json
	fileU, err := os.Create("weather/coordinates.json")

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("Unable to create file:", err)
		os.Exit(1)
	}
	defer fileU.Close()

	// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –≤ json
	result, _ := json.Marshal(m)
	// –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
	fileU.Write(result)

	//–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö
	SendMsg(botUrl, update, "–ó–∞–ø–∏—Å–∞–ª –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã!")
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
func getCoordinates(update Update) (string, string) {

	// –ß—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ json —Ñ–∞–π–ª–∞ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
	file, err := os.Open("weather/coordinates.json")

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—à–∏–±–∫—É
	if err != nil {
		// –í—ã–≤–æ–¥ –∏ –≤–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		fmt.Println("Unable to create file:", err)
		os.Exit(1)
	}
	defer file.Close()

	// Map –Ω—É–∂–Ω–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
	// –ö–ª—é—á - –∞–π–¥–∏ –¥–∏–∞–ª–æ–≥–∞; –ó–Ω–∞—á–µ–Ω–∏–µ - –≤–≤–µ–¥–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
	var m map[string]string
	// –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Ñ–∞–π–ª–∞
	body, _ := ioutil.ReadAll(file)
	// –ó–∞–ø–∏—Å—å –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
	json.Unmarshal(body, &m)

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —Ä–∞–Ω–µ–µ
	coords, c := m[strconv.Itoa(update.Message.Chat.ChatId)], 0

	// —Å - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–±–µ–ª–∞
	for ; c < len(coords); c++ {
		// –ü–æ–∏—Å–∫ –ø—Ä–æ–±–µ–ª–∞
		if coords[c] == ' ' {
			// –ü—Ä–æ–±–µ–ª –Ω–∞–π–¥–µ–Ω, –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞
			break
		}
	}

	// –ï—Å–ª–∏ –ø—Ä–æ–±–µ–ª –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –∏–ª–∏ –µ–≥–æ –Ω–µ—Ç - –æ—à–∏–±–∫–∞
	if c == 0 || c == len(coords) {
		// –í–æ–∑–≤—Ä–∞—Ç –æ—à–∏–±–∫–∏
		return "err", "err"
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	latFloat, err := strconv.ParseFloat(coords[:c], 64)
	// –ü—Ä–æ–≤–µ—Ä–∫–∞. –®–∏—Ä–æ—Ç–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ 90 –∏–ª–∏ –º–µ–Ω—å—à–µ -90
	if err != nil || !(latFloat > -90 && latFloat < 90) {
		// –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
		return "err", "err"
	}

	// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	lonFloat, err := strconv.ParseFloat(coords[c+1:], 64)
	// –ü—Ä–æ–≤–µ—Ä–∫–∞. –£ –¥–æ–ª–≥–æ—Ç—ã —Ç–æ–∂–µ –µ—Å—Ç—å —Ä–∞–º–∫–∏: –æ—Ç -180 –¥–æ 180
	if err != nil || !(lonFloat > -180 && lonFloat < 180) {
		// –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏
		return "err", "err"
	}

	// –í–æ–∑–≤—Ä–∞—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
	return coords[:c], coords[c+1:]
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥–∞ (–≤—Å–µ—Ö —Ç–æ–∫–µ–Ω–æ–≤)
func InitConfig() error {

	// –ì–¥–µ –∫–æ–Ω—Ñ–∏–≥
	viper.AddConfigPath("configs")

	// –ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–∞–π–ª
	viper.SetConfigName("config")

	// –í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è (–≤—Å—ë —Ö–æ—Ä–æ—à–æ - –≤–µ—Ä–Ω—ë—Ç nil)
	return viper.ReadInConfig()
}
